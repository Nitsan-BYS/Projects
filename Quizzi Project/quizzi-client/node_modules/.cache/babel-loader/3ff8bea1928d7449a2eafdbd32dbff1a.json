{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitsa\\\\Desktop\\\\Programming\\\\Github Projects\\\\Quizzi Project\\\\quizzi-client\\\\src\\\\Components\\\\QuizGame\\\\QuizGame.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Container, Typography, Button } from '@mui/core';\nimport styles from './QuizGame.module.css';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport ProgressBar from '@ramonak/react-progress-bar';\nimport httpService from '../../Services/httpService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuizGame = () => {\n  _s();\n\n  const [quiz, setQuiz] = useState(['']);\n  const [number, setNumber] = useState(0);\n  const [pts, setPts] = useState(0);\n  const [hideScore, setHideScore] = useState(true);\n  const [hideQuiz, setHideQuiz] = useState(false);\n  const [details, setDetails] = useState('');\n  const [win, setWin] = useState(0);\n  const [lose, setLose] = useState(0);\n\n  const shuffle = arr => arr.sort(() => Math.random() - 0.5);\n\n  const pickAnswer = e => {\n    let userAnswer = e.target.outerText;\n    const res = userAnswer.split(' ').map(item => item.charAt(0).toUpperCase() + item.slice(1).toLowerCase()).join(' ');\n    if (quiz[number].answer === res) setPts(pts + 1);\n    setNumber(number + 1);\n\n    if (number === 9) {\n      setHideQuiz(true);\n      setHideScore(false);\n\n      if (pts > 5) {\n        setWin(1);\n      } else setLose(1);\n    }\n  };\n\n  const navigate = useNavigate();\n\n  const handleClickBackToHome = async () => {\n    await fetch(httpService.getUrl(`api/players/${localStorage.getItem('id')}`), {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        pointsEarned: pts + details.pointsEarned,\n        gamesWins: details.gamesWins + win,\n        gamesLosses: details.gamesLosses + lose\n      })\n    });\n    navigate('/');\n  };\n\n  const renderProgressBar = () => {\n    return /*#__PURE__*/_jsxDEV(ProgressBar, {\n      completed: number * 10,\n      bgColor: \"#ff4d77\",\n      width: \"80%\",\n      margin: \"8%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    function fetchData() {\n      fetch(httpService.getUrl(`api/players/${localStorage.getItem('id')}`), {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        setDetails(data[0]);\n      });\n      axios.get('https://opentdb.com/api.php?amount=10&category=9&difficulty=hard&type=multiple').then(res => {\n        setQuiz(res.data.results.map(item => ({\n          question: item.question,\n          options: shuffle([...item.incorrect_answers, item.correct_answer]),\n          answer: item.correct_answer\n        })));\n      }).catch(err => console.error(err));\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      hidden: hideScore,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        style: {\n          marginTop: '33vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          align: \"center\",\n          id: styles.score,\n          children: [' ', \"You scored \", pts, \" out of \", 10]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            id: styles.homeButton,\n            onClick: handleClickBackToHome,\n            children: \"Back To Homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      hidden: hideQuiz,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        className: styles.container,\n        children: [renderProgressBar(), /*#__PURE__*/_jsxDEV(Typography, {\n          id: styles.progress,\n          align: \"center\",\n          variant: \"subtitle2\",\n          children: [number + 1, \"/\", quiz.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          align: \"left\",\n          id: styles.title,\n          children: [\"Question \", number + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), quiz[number] && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.quest,\n            dangerouslySetInnerHTML: {\n              __html: quiz[number].question\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            children: quiz[number].options.map((item, index) => /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              id: styles.answerButton,\n              onClick: pickAnswer,\n              children: /*#__PURE__*/_jsxDEV(\"section\", {\n                dangerouslySetInnerHTML: {\n                  __html: item\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(QuizGame, \"k33PC/3q4a/sMzKJI+z6HwhLNN4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = QuizGame;\nexport default QuizGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizGame\");","map":{"version":3,"sources":["C:/Users/nitsa/Desktop/Programming/Github Projects/Quizzi Project/quizzi-client/src/Components/QuizGame/QuizGame.js"],"names":["useEffect","useState","Container","Typography","Button","styles","axios","useNavigate","ProgressBar","httpService","QuizGame","quiz","setQuiz","number","setNumber","pts","setPts","hideScore","setHideScore","hideQuiz","setHideQuiz","details","setDetails","win","setWin","lose","setLose","shuffle","arr","sort","Math","random","pickAnswer","e","userAnswer","target","outerText","res","split","map","item","charAt","toUpperCase","slice","toLowerCase","join","answer","navigate","handleClickBackToHome","fetch","getUrl","localStorage","getItem","method","headers","body","JSON","stringify","pointsEarned","gamesWins","gamesLosses","renderProgressBar","fetchData","Authorization","then","json","data","get","results","question","options","incorrect_answers","correct_answer","catch","err","console","error","marginTop","score","homeButton","container","progress","length","title","quest","__html","index","answerButton"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Container, Typography, Button } from '@mui/core';\r\nimport styles from './QuizGame.module.css';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ProgressBar from '@ramonak/react-progress-bar';\r\nimport httpService from '../../Services/httpService';\r\n\r\nconst QuizGame = () => {\r\n  const [quiz, setQuiz] = useState(['']);\r\n  const [number, setNumber] = useState(0);\r\n  const [pts, setPts] = useState(0);\r\n  const [hideScore, setHideScore] = useState(true);\r\n  const [hideQuiz, setHideQuiz] = useState(false);\r\n  const [details, setDetails] = useState('');\r\n  const [win, setWin] = useState(0);\r\n  const [lose, setLose] = useState(0);\r\n\r\n  const shuffle = (arr) => arr.sort(() => Math.random() - 0.5);\r\n  const pickAnswer = (e) => {\r\n    let userAnswer = e.target.outerText;\r\n    const res = userAnswer\r\n      .split(' ')\r\n      .map((item) => item.charAt(0).toUpperCase() + item.slice(1).toLowerCase())\r\n      .join(' ');\r\n\r\n    if (quiz[number].answer === res) setPts(pts + 1);\r\n    setNumber(number + 1);\r\n    if (number === 9) {\r\n      setHideQuiz(true);\r\n      setHideScore(false);\r\n\r\n      if (pts > 5) {\r\n        setWin(1);\r\n      } else setLose(1);\r\n    }\r\n  };\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickBackToHome = async () => {\r\n    await fetch(\r\n      httpService.getUrl(`api/players/${localStorage.getItem('id')}`),\r\n      {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          pointsEarned: pts + details.pointsEarned,\r\n          gamesWins: details.gamesWins + win,\r\n          gamesLosses: details.gamesLosses + lose,\r\n        }),\r\n      }\r\n    );\r\n    navigate('/');\r\n  };\r\n\r\n  const renderProgressBar = () => {\r\n    return (\r\n      <ProgressBar\r\n        completed={number * 10}\r\n        bgColor='#ff4d77'\r\n        width='80%'\r\n        margin='8%'\r\n      />\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    function fetchData() {\r\n      fetch(httpService.getUrl(`api/players/${localStorage.getItem('id')}`), {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n        },\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          setDetails(data[0]);\r\n        });\r\n\r\n      axios\r\n        .get(\r\n          'https://opentdb.com/api.php?amount=10&category=9&difficulty=hard&type=multiple'\r\n        )\r\n        .then((res) => {\r\n          setQuiz(\r\n            res.data.results.map((item) => ({\r\n              question: item.question,\r\n              options: shuffle([\r\n                ...item.incorrect_answers,\r\n                item.correct_answer,\r\n              ]),\r\n              answer: item.correct_answer,\r\n            }))\r\n          );\r\n        })\r\n        .catch((err) => console.error(err));\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section hidden={hideScore}>\r\n        <Container maxWidth='sm' style={{ marginTop: '33vh' }}>\r\n          <Typography variant='h5' align='center' id={styles.score}>\r\n            {' '}\r\n            You scored {pts} out of {10}\r\n          </Typography>\r\n          <Typography align='center'>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              id={styles.homeButton}\r\n              onClick={handleClickBackToHome}\r\n            >\r\n              Back To Homepage\r\n            </Button>\r\n          </Typography>\r\n        </Container>\r\n      </section>\r\n      <section hidden={hideQuiz}>\r\n        <Container maxWidth='sm' className={styles.container}>\r\n          {renderProgressBar()}\r\n          <Typography id={styles.progress} align='center' variant='subtitle2'>\r\n            {number + 1}/{quiz.length}\r\n          </Typography>\r\n          <Typography variant='h4' align='left' id={styles.title}>\r\n            Question {number + 1}\r\n          </Typography>\r\n          {quiz[number] && (\r\n            <>\r\n              <h2\r\n                className={styles.quest}\r\n                dangerouslySetInnerHTML={{ __html: quiz[number].question }}\r\n              ></h2>\r\n              <section>\r\n                {quiz[number].options.map((item, index) => (\r\n                  <Button\r\n                    variant='contained'\r\n                    color='secondary'\r\n                    id={styles.answerButton}\r\n                    key={index}\r\n                    onClick={pickAnswer}\r\n                  >\r\n                    <section\r\n                      dangerouslySetInnerHTML={{ __html: item }}\r\n                    ></section>\r\n                  </Button>\r\n                ))}\r\n              </section>\r\n            </>\r\n          )}\r\n        </Container>\r\n      </section>\r\n      </>\r\n  );\r\n};\r\nexport default QuizGame;\r\n"]},"metadata":{},"sourceType":"module"}