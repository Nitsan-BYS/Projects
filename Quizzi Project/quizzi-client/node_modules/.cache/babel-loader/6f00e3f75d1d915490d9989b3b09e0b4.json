{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitsa\\\\Desktop\\\\Programming\\\\Github Projects\\\\Quizzi Project\\\\quizzi-client\\\\src\\\\Components\\\\RegisterForm\\\\RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { Container, TextField, Button, Link, Typography } from '@material-ui/core';\nimport styles from './RegisterForm.module.css';\nimport httpService from '../../Services/httpService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [err, setErr] = useState(false);\n  const [errorText, setErrorText] = useState('');\n\n  async function registerUser(event) {\n    event.preventDefault();\n    const response = await fetch(httpService.getUrl('api/players'), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    setErrorText(data.message);\n    setErr(true);\n\n    if (data.status === 'ok') {\n      navigate('/login');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fixed: true,\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      id: styles.title_colors,\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Welcome to Quizzi!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 103\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.subtitle,\n        children: \"where Learning is FUN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 108\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      id: styles.reg_styling,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerUser,\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: styles.textfield,\n        color: \"secondary\",\n        label: \"Full Name\",\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true,\n        fullWidth: true,\n        margin: \"normal\",\n        autoComplete: \"name\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: styles.textfield1,\n        color: \"secondary\",\n        label: \"Email\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        fullWidth: true,\n        margin: \"normal\",\n        autoComplete: \"email\",\n        error: err,\n        helperText: errorText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: styles.textfield2,\n        color: \"secondary\",\n        label: \"Password\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        id: styles.registerButton,\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        id: styles.ask,\n        display: \"block\",\n        variant: \"subtitle2\",\n        align: \"center\",\n        children: \"Already have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        id: styles.regLink,\n        href: \"/login\",\n        variant: \"body2\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterForm, \"1yJoFPG809VStjKph+orYbQeS+M=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/nitsa/Desktop/Programming/Github Projects/Quizzi Project/quizzi-client/src/Components/RegisterForm/RegisterForm.js"],"names":["useState","useNavigate","Container","TextField","Button","Link","Typography","styles","httpService","RegisterForm","navigate","name","setName","email","setEmail","password","setPassword","err","setErr","errorText","setErrorText","registerUser","event","preventDefault","response","fetch","getUrl","method","headers","body","JSON","stringify","data","json","message","status","container","title_colors","subtitle","reg_styling","textAlign","textfield","e","target","value","textfield1","textfield2","registerButton","ask","regLink"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { Container, TextField, Button, Link, Typography } from '@material-ui/core';\nimport styles from './RegisterForm.module.css';\nimport httpService from '../../Services/httpService';\n\n\n\nconst RegisterForm = () => {\n    const navigate = useNavigate();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [err, setErr] = useState(false);\n    const [errorText, setErrorText] = useState('');\n\n    async function registerUser(event) {\n        event.preventDefault()\n       \n        const response = await fetch(httpService.getUrl('api/players'), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name,\n                email,\n                password,\n            }),\n        })\n        const data = await response.json();\n        setErrorText(data.message);\n        setErr(true);\n\n\n        if (data.status === 'ok') {\n            navigate('/login')\n        }\n    }\n\n    return (\n        <Container fixed className={styles.container}>\n            <Typography variant=\"h4\" align='center' id={styles.title_colors}><b>Welcome to Quizzi!</b><br/><span className={styles.subtitle}>where Learning is FUN</span></Typography>\n            <Typography variant=\"h3\" align='center' id={styles.reg_styling}>Register</Typography>\n\n            <form onSubmit={registerUser} style={{ textAlign: 'center' }}>\n                <TextField id={styles.textfield} color=\"secondary\" label=\"Full Name\" type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required fullWidth margin=\"normal\" autoComplete=\"name\" autoFocus />\n                <TextField id={styles.textfield1} color=\"secondary\" label=\"Email\" type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required fullWidth margin=\"normal\" autoComplete=\"email\" error={err} helperText={errorText} />\n                <TextField id={styles.textfield2} color=\"secondary\" label=\"Password\" type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required fullWidth margin=\"normal\" />\n\n                <Button type=\"submit\" id={styles.registerButton} variant=\"contained\" color=\"secondary\">\n                    Create Account\n                </Button>\n                <Typography id={styles.ask} display=\"block\" variant=\"subtitle2\" align='center' >Already have an account?</Typography>\n                <Link id={styles.regLink} href=\"/login\" variant=\"body2\" >Login</Link>\n            </form>\n        </Container>\n    );\n}\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}