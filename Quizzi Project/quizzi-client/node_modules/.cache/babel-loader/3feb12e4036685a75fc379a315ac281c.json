{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitsa\\\\Desktop\\\\Programming\\\\Github Projects\\\\Quizzi Project\\\\quizzi-client\\\\src\\\\Components\\\\EditProfile\\\\EditProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Container, TextField, Button, Typography } from '@mui/material';\nimport styles from './EditProfilePage.module.css';\nimport httpService from '../../Services/httpService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditProfilePage = () => {\n  _s();\n\n  const [requestMessage, setRequestMessage] = useState('');\n  const [name, setName] = useState(localStorage.getItem('userName'));\n  const [password, setPassword] = useState('');\n\n  const updateData = ev => {\n    if (ev) {\n      ev.preventDefault();\n    }\n\n    setRequestMessage('');\n    fetch(httpService.getUrl(`api/players/${localStorage.getItem('id')}`), {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        password: password\n      })\n    }).then(response => {\n      console.log(response);\n      setRequestMessage('User successfully updated!');\n    }).catch(err => {\n      setRequestMessage('Failed to update user.');\n      throw err;\n    }).finally(() => {\n      console.log('finally');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      id: styles.title,\n      variant: \"h4\",\n      children: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateData,\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: styles.entry,\n        color: \"secondary\",\n        label: \"Full Name\",\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        fullWidth: true,\n        margin: \"normal\",\n        autoComplete: \"name\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: styles.entry1,\n        color: \"secondary\",\n        label: \"Password\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        id: styles.updateButton,\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Update Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), !!requestMessage && /*#__PURE__*/_jsxDEV(Typography, {\n      id: styles.req,\n      variant: \"h6\",\n      children: requestMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditProfilePage, \"5FCvImmsV4/c/e7wGPPsJUlIdjg=\");\n\n_c = EditProfilePage;\nexport default EditProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePage\");","map":{"version":3,"sources":["C:/Users/nitsa/Desktop/Programming/Github Projects/Quizzi Project/quizzi-client/src/Components/EditProfile/EditProfilePage.js"],"names":["useState","Container","TextField","Button","Typography","styles","httpService","EditProfilePage","requestMessage","setRequestMessage","name","setName","localStorage","getItem","password","setPassword","updateData","ev","preventDefault","fetch","getUrl","method","headers","body","JSON","stringify","then","response","console","log","catch","err","finally","container","title","textAlign","entry","e","target","value","entry1","updateButton","req"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Container, TextField, Button, Typography } from '@mui/material';\nimport styles from './EditProfilePage.module.css';\nimport httpService from '../../Services/httpService';\n\nconst EditProfilePage = () => {\n\n  const [requestMessage, setRequestMessage] = useState('');\n  const [name, setName] = useState(localStorage.getItem('userName'));\n  const [password, setPassword] = useState('');\n\n  const updateData = (ev) => {\n    if (ev) {\n      ev.preventDefault();\n    }\n    setRequestMessage('');\n    fetch(httpService.getUrl(`api/players/${localStorage.getItem('id')}`), {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: name,\n        password: password,\n      }),\n    })\n      .then((response) => {\n        console.log(response);\n        setRequestMessage('User successfully updated!');\n      })\n      .catch((err) => {\n        setRequestMessage('Failed to update user.');\n        throw err;\n      })\n      .finally(() => {\n        console.log('finally');\n      });\n  };\n\n  return (\n    <Container maxWidth='xl' className={styles.container}>\n      <Typography id={styles.title} variant='h4'>\n        Edit Profile\n      </Typography>\n      <form onSubmit={updateData} style={{ textAlign: 'center' }}>\n        <TextField id={styles.entry} color='secondary' label='Full Name' type='text' value={name} onChange={(e) => setName(e.target.value)}\n          fullWidth margin='normal' autoComplete='name' autoFocus />\n        <TextField\n          id={styles.entry1}\n          color='secondary'\n          label='Password'\n          type='password'\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          fullWidth\n          margin='normal'\n        />\n        <Button\n          type='submit'\n          id={styles.updateButton}\n          variant='contained'\n          color='secondary'\n        >\n          Update Account\n        </Button>\n      </form>\n      {!!requestMessage && (\n        <Typography id={styles.req} variant='h6'>\n          {requestMessage}\n        </Typography>\n      )}\n    </Container>\n  );\n};\n\nexport default EditProfilePage;\n"]},"metadata":{},"sourceType":"module"}